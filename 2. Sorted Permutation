Ques : Given a string, find the rank of the string amongst its permutations sorted lexicographically. 

Assume that no characters are repeated.

Example :

Input : 'acb'
Output : 2

The order permutations with letters 'a', 'c', and 'b' : 
abc
acb
bac
bca
cab
cba
The answer might not fit in an integer, so return your answer % 1000003

Solution :
#define MOD 1000003
#define pb push_back 
#define ll long long 

vector<ll> solve(int n){
    vector<ll> fact(n+1,1);
    for(int i=1 ; i<=n ; ++i){
        fact[i] = (fact[i-1]*i)%MOD ;
    }
    return fact ;
}

int Solution::findRank(string A) {
   ll ans = 1 ;
   int n = A.size() -1 ;
   vector<ll> fact = solve(n+1);
   for(int i=0 ; i<A.size() ; ++i){
       int cnt = 0 ;
       for(int j=i+1 ; j<A.size() ; ++j){
           if(A[i]>A[j]>0){
               cnt++;
           }
       }
       ans = (ans+((cnt)*fact[n--])%MOD)%MOD ;
   }

  return ans ;

}
