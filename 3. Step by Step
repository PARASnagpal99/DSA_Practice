Problem Description

Given a target A on an infinite number line, i.e. -infinity to +infinity.

You are currently at position 0 and you need to reach the target by moving according to the below rule:

In ith move you can take i steps forward or backward.
Find the minimum number of moves required to reach the target.
Example Input
Input 1:

 3
Input 2:

 2
 Explanation 1:
 On the first move we step from 0 to 1.
 On the second step we step from 1 to 3. 

Solution : 
class Solution {
public:
    int reachNumber(int target) {
        if(target==0){
            return 0 ;
        }
        
        int ans = 0 , i = 1 ;
        target = abs(target);
        while(true){
            ans+=i;
            if(ans==target) return i ;
            
            if(ans>target){
                if((ans-target)%2==0)
                    return i ;
                if(i%2)
                    return (i+2);
                return (i+1);
            }
            i++;
        }
        return i ;
    }
};

  
